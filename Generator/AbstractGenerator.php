<?php

/*
* This file is part of RCH/CapistranoBundle.
*
* Robin Chalas <robin.chalas@gmail.com>
*
* For more informations about license, please see the LICENSE
* file distributed in this source code.
*/

namespace RCH\CapistranoBundle\Generator;

/**
 * Abstract class for generators.
 *
 * @author Robin Chalas <robin.chalas@gmail.com>
 */
abstract class AbstractGenerator implements GeneratorInterface
{
    /**
     * @var array
     */
    protected $parameters;

    /**
     * @var string
     */
    protected $path;

    /**
     * @var string
     */
    protected $name;

    /**
     * @var mixed
     */
    protected $file;

    /**
     * @var string
     */
    protected static $headersTemplate = '
###########################################################################
#             This file is generated by RCH/CapistranoBundle              #
#                                                                         #
#               https://github.com/chalasr/CapistranoBundle               #
#                  Robin Chalas <robin.chalas@gmail.com>                  #
#                                                                         #
###########################################################################
';

    /**
     * Constructor.
     *
     * @param array  $parameters
     * @param string $path
     * @param string $name
     */
    public function __construct(array $parameters, $path, $name)
    {
        $this->parameters = $parameters;
        $this->path = sprintf('%s/../%s', $path, $name);
        $this->name = $name;
    }

    /**
     * Opens file at given path.
     */
    public function open()
    {
        if (!is_dir($directory = dirname($this->path))) {
            mkdir($directory, 0755);
        }

        $this->file = fopen($this->path, 'w');
    }

    /**
     * Close generated file.
     */
    public function close()
    {
        fclose($this->file);
    }

    /**
     * Add license headers.
     *
     * @return string
     */
    public function addHeaders($generated)
    {
        return sprintf('%s%s%s', self::$headersTemplate, PHP_EOL, $generated);
    }
}
